@model Monetrix.Models.Account

@{
    ViewData["Title"] = "Account Details";
}

<div class="container mt-4">
    <div class="bank-card shadow rounded-3 overflow-hidden">

        <div class="card-header-custom d-flex justify-content-center align-items-center">
            <span>Account Info</span>
        </div>

        <div class="p-4">
            <dl class="row">
                <dt class="col-sm-3">Is Active</dt>
                <dd class="col-sm-9">@Model.IsActive</dd>

                <dt class="col-sm-3">Balance</dt>
                <dd class="col-sm-9">@Model.Balance</dd>

                <dt class="col-sm-3">Account Number</dt>
                <dd class="col-sm-9">@Model.AccountNumber</dd>

                <dt class="col-sm-3">Account Type</dt>
                <dd class="col-sm-9">@Model.AccountType</dd>

                <dt class="col-sm-3">Created Date</dt>
                <dd class="col-sm-9">@Model.CreatedDate.ToString("yyyy-MM-dd")</dd>

                <dt class="col-sm-3">Close Date</dt>
                <dd class="col-sm-9">
                    @(Model.CloseDate != null ? Model.CloseDate?.ToString("yyyy-MM-dd") : "Running")
                </dd>

                <dt class="col-sm-3">Customer Name</dt>
                <dd class="col-sm-9">@Model.Customer.FullName</dd>

                <dt class="col-sm-3">National ID</dt>
                <dd class="col-sm-9">@Model.Customer.NationalId</dd>
            </dl>

            <div class="mt-4 d-flex justify-content-end gap-2">
                @if (User.IsInRole("Admin") || User.IsInRole("Accountant"))
                {
                    <a asp-action="Edit" asp-route-id="@Model.AccountId" class="btn btn-warning">Edit</a>
                    <a asp-action="Delete" asp-route-id="@Model.AccountId" class="btn btn-danger">Delete</a>
                }
                @{
                    var returnUrl = Context.Request.Query["returnUrl"].ToString();
                    if (string.IsNullOrEmpty(returnUrl))
                    {
                        returnUrl = Url.Action("Index", "Account");
                    }
                }
                <a href="@returnUrl" class="btn btn-secondary">Back</a>
            </div>
        </div>
    </div>
</div>


<hr />

@if (User.IsInRole("Admin") || User.IsInRole("Teller") || User.IsInRole("Auditor") || User.IsInRole("Accountant"))
{
    <h3 style="font-weight: bold;">Bank Transactions - Sent</h3>
    @if (Model.TransactionsSent != null && Model.TransactionsSent.Any())
    {
        <table>
            <thead class="thead-dark">
                <tr>
                    <th>To Account</th>
                    <th>Type</th>
                    <th>Amount</th>
                    <th>Date</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.TransactionsSent)
                {
                    <tr>
                        <td>
                            @(string.IsNullOrEmpty(transaction.ReceiverAccount?.AccountNumber) ? transaction.SenderAccount?.AccountNumber : transaction.ReceiverAccount?.AccountNumber)
                        </td>
                        <td>@transaction.TransactionType</td>
                        <td>@transaction.Amount.ToString("C")</td>
                        <td>@transaction.TransactionDate.ToShortDateString()</td>
                        <td>
                            <a asp-controller="Transaction" asp-action="Details" asp-route-id="@transaction.TransactionId" asp-route-returnUrl="@Url.Action("Details", "Account", new { id = Model.AccountId })" title="Details">
                                <img src="~/Icons/research.png" alt="Details" style="width:50px; height:50px;">
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted">No sent transactions found.</p>
    }

    <hr />

    <h3 style="font-weight: bold;">Bank Transactions - Received</h3>
    @if (Model.TransactionsReceived != null && Model.TransactionsReceived.Any())
    {
        <table>
            <thead class="thead-dark">
                <tr>
                    <th>From Account</th>
                    <th>Type</th>
                    <th>Amount</th>
                    <th>Date</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transaction in Model.TransactionsReceived)
                {
                    <tr>
                        <td>@transaction.SenderAccount?.AccountNumber</td>
                        <td>@transaction.TransactionType</td>
                        <td>@transaction.Amount.ToString("C")</td>
                        <td>@transaction.TransactionDate.ToShortDateString()</td>
                        <td>
                            <a asp-controller="Transaction" asp-action="Details" asp-route-id="@transaction.TransactionId" asp-route-returnUrl="@Url.Action("Details", "Account", new { id = Model.AccountId })" title="Details">
                                <img src="~/Icons/research.png" alt="Details" style="width:50px; height:50px;">
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted">No received transactions found.</p>
    }

    @if (User.IsInRole("Admin") || User.IsInRole("Auditor") || User.IsInRole("Teller"))
    {
        <p class="btn-container">
            <a asp-controller="Transaction" asp-action="Create" asp-route-accountId="@Model.AccountId" class="btn btn-bank-create mt-3">Create New Transaction</a>
        </p>
    }
}